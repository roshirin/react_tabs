{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getSelectedTabContent","tabs","selectedId","selectedTab","find","tab","id","content","Tabs","selectedTabId","onTabSelected","some","refineSelectedId","className","map","title","classNames","href","onClick","handleTabSelection","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAqBMA,EAAwB,SAACC,EAAaC,GAC1C,IAAMC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAEhD,OAAOC,GAAeA,EAAYI,SAGvBC,EAAwB,SAAC,GAI/B,IAHLP,EAGI,EAHJA,KACAQ,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMR,EArBiB,SAACD,EAAaQ,GAGrC,OAF0BR,EAAKU,MAAK,SAAAN,GAAG,OAAIA,EAAIC,KAAOG,KAM/CA,EAHER,EAAK,GAAGK,GAiBEM,CAAiBX,EAAMQ,GAQ1C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGZ,EAAKa,KAAI,SAAAT,GACR,IAAQC,EAAcD,EAAdC,GAAIS,EAAUV,EAAVU,MAEZ,OACE,oBACEF,UAAWG,IACT,CAAE,YAAaV,IAAOJ,IAExB,UAAQ,MAJV,SAME,mBACEe,KAAI,WAAMX,GACV,UAAQ,UACRY,QAAS,kBAvBE,SAACb,GACtBA,EAAIC,KAAOG,GACbC,EAAcL,GAqBac,CAAmBd,IAHpC,SAKGU,aAQb,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACGb,EAAsBC,EAAMC,SC7DxBD,EAAO,CAClB,CAAEK,GAAI,QAASS,MAAO,QAASR,QAAS,eACxC,CAAED,GAAI,QAASS,MAAO,QAASR,QAAS,eACxC,CAAED,GAAI,QAASS,MAAO,QAASR,QAAS,gBAG7Ba,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOZ,EAAP,KAAsBa,EAAtB,KAEMnB,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOG,KAMhD,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SACGV,GAAW,0BAAuBA,EAAYY,SAGjD,cAAC,EAAD,CACEd,KAAMA,EACNQ,cAAeA,EACfC,cAbgB,SAACL,GACrBiB,EAAiBjB,EAAIC,WChBzBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c8e28030.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype TabChangeCallback = (tab: Tab) => void;\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: TabChangeCallback;\n};\n\nconst refineSelectedId = (tabs: Tab[], selectedTabId: string) => {\n  const isValidSelectedId = tabs.some(tab => tab.id === selectedTabId);\n\n  if (!isValidSelectedId) {\n    return tabs[0].id;\n  }\n\n  return selectedTabId;\n};\n\nconst getSelectedTabContent = (tabs: Tab[], selectedId: string) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedId);\n\n  return selectedTab && selectedTab.content;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedId = refineSelectedId(tabs, selectedTabId);\n\n  const handleTabSelection = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames(\n                  { 'is-active': id === selectedId },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabSelection(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {getSelectedTabContent(tabs, selectedId)}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {selectedTab && `Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}